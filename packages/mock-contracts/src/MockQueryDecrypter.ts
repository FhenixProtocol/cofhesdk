// This file is auto-generated by build-artifacts.ts
import { type MocksArtifact } from './index';

export const MockQueryDecrypterArtifact = {
  "contractName": "MockQueryDecrypter",
  "fixedAddress": "0x0000000000000000000000000000000000000200",
  "abi": [
    {
      "type": "function",
      "name": "decodeLowLevelReversion",
      "inputs": [
        {
          "name": "data",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [
        {
          "name": "error",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "exists",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "_taskManager",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_acl",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "mockAcl",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract MockACL"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "mockQueryDecrypt",
      "inputs": [
        {
          "name": "ctHash",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "issuer",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "allowed",
          "type": "bool",
          "internalType": "bool"
        },
        {
          "name": "error",
          "type": "string",
          "internalType": "string"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "mockTaskManager",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "contract MockTaskManager"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "queryDecrypt",
      "inputs": [
        {
          "name": "ctHash",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "permission",
          "type": "tuple",
          "internalType": "struct Permission",
          "components": [
            {
              "name": "issuer",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "expiration",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "validatorId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "validatorContract",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "sealingKey",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "issuerSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "recipientSignature",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "allowed",
          "type": "bool",
          "internalType": "bool"
        },
        {
          "name": "error",
          "type": "string",
          "internalType": "string"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "querySealOutput",
      "inputs": [
        {
          "name": "ctHash",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "permission",
          "type": "tuple",
          "internalType": "struct Permission",
          "components": [
            {
              "name": "issuer",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "expiration",
              "type": "uint64",
              "internalType": "uint64"
            },
            {
              "name": "recipient",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "validatorId",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "validatorContract",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "sealingKey",
              "type": "bytes32",
              "internalType": "bytes32"
            },
            {
              "name": "issuerSignature",
              "type": "bytes",
              "internalType": "bytes"
            },
            {
              "name": "recipientSignature",
              "type": "bytes",
              "internalType": "bytes"
            }
          ]
        }
      ],
      "outputs": [
        {
          "name": "allowed",
          "type": "bool",
          "internalType": "bool"
        },
        {
          "name": "error",
          "type": "string",
          "internalType": "string"
        },
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "seal",
      "inputs": [
        {
          "name": "input",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "key",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "function",
      "name": "unseal",
      "inputs": [
        {
          "name": "hashed",
          "type": "bytes32",
          "internalType": "bytes32"
        },
        {
          "name": "key",
          "type": "bytes32",
          "internalType": "bytes32"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "pure"
    },
    {
      "type": "error",
      "name": "NotAllowed",
      "inputs": []
    },
    {
      "type": "error",
      "name": "SealingKeyInvalid",
      "inputs": []
    },
    {
      "type": "error",
      "name": "SealingKeyMissing",
      "inputs": []
    }
  ],
  "deployedBytecode": "0x608060405234801561000f575f80fd5b506004361061009c575f3560e01c80637e0f4b5b116100645780637e0f4b5b1461015a5780638a5c8c7f14610178578063a02eb534146101a8578063a0639f54146101da578063ff6957d31461020c5761009c565b806309ba3156146100a05780631a1992a9146100d2578063267c4ae414610102578063485cc955146101205780634cdc014d1461013c575b5f80fd5b6100ba60048036038101906100b591906110b3565b61023c565b6040516100c9939291906111a8565b60405180910390f35b6100ec60048036038101906100e791906111e4565b61051f565b6040516100f99190611222565b60405180910390f35b61010a61052d565b604051610117919061123b565b60405180910390f35b61013a60048036038101906101359190611254565b610535565b005b6101446105b8565b60405161015191906112ed565b60405180910390f35b6101626105dd565b60405161016f9190611326565b60405180910390f35b610192600480360381019061018d919061133f565b610600565b60405161019f919061138c565b60405180910390f35b6101c260048036038101906101bd91906113a5565b61060e565b6040516101d1939291906113f5565b60405180910390f35b6101f460048036038101906101ef91906110b3565b61089d565b604051610203939291906113f5565b60405180910390f35b61022660048036038101906102219190611431565b610b26565b6040516102339190611478565b60405180910390f35b5f60605f805f1b8460a001510361027f576040517fb78926d800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ae79f04a86896040518363ffffffff1660e01b81526004016102dc9291906115da565b602060405180830381865afa92505050801561031657506040513d601f19601f820116820180604052508101906103139190611632565b60015b61040257610322611669565b806308c379a0036103535750610336611688565b8061034157506103b8565b5f815f801b9450945094505050610516565b634e487b71036103b857610365611717565b9061037057506103b8565b5f805f1b6040518060400160405280600581526020017f50616e6963000000000000000000000000000000000000000000000000000000815250909450945094505050610516565b3d805f81146103e2576040519150601f19603f3d011682016040523d82523d5f602084013e6103e7565b606091505b505f6103f282610b26565b5f801b9450945094505050610516565b8091505080610452575f805f1b6040518060400160405280600a81526020017f4e6f74416c6c6f776564000000000000000000000000000000000000000000008152509093509350935050610516565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631c76642b896040518263ffffffff1660e01b81526004016104ac919061138c565b602060405180830381865afa1580156104c7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104eb9190611749565b905060016104fd828860a0015161051f565b60405180602001604052805f8152509094509450945050505b93509350939050565b5f81835f1b18905092915050565b5f6001905090565b815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f8183185f1c905092915050565b5f60605f8060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635faa299a88876040518363ffffffff1660e01b815260040161066f929190611783565b602060405180830381865afa9250505080156106a957506040513d601f19601f820116820180604052508101906106a69190611632565b60015b61078f576106b5611669565b806308c379a0036106e457506106c9611688565b806106d45750610747565b5f815f9450945094505050610894565b634e487b7103610747576106f6611717565b906107015750610747565b5f806040518060400160405280600581526020017f50616e6963000000000000000000000000000000000000000000000000000000815250909450945094505050610894565b3d805f8114610771576040519150601f19603f3d011682016040523d82523d5f602084013e610776565b606091505b505f61078182610b26565b5f9450945094505050610894565b80915050806107dd575f806040518060400160405280600a81526020017f4e6f74416c6c6f776564000000000000000000000000000000000000000000008152509093509350935050610894565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631c76642b896040518263ffffffff1660e01b8152600401610837919061138c565b602060405180830381865afa158015610852573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108769190611749565b905060018160405180602001604052805f8152509094509450945050505b93509350939050565b5f60605f8060015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ae79f04a86896040518363ffffffff1660e01b81526004016108fe9291906115da565b602060405180830381865afa92505050801561093857506040513d601f19601f820116820180604052508101906109359190611632565b60015b610a1e57610944611669565b806308c379a0036109735750610958611688565b8061096357506109d6565b5f815f9450945094505050610b1d565b634e487b71036109d657610985611717565b9061099057506109d6565b5f806040518060400160405280600581526020017f50616e6963000000000000000000000000000000000000000000000000000000815250909450945094505050610b1d565b3d805f8114610a00576040519150601f19603f3d011682016040523d82523d5f602084013e610a05565b606091505b505f610a1082610b26565b5f9450945094505050610b1d565b8091505080610a6c575f806040518060400160405280600a81526020017f4e6f74416c6c6f776564000000000000000000000000000000000000000000008152509093509350935050610b1d565b60015f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631c76642b896040518263ffffffff1660e01b8152600401610ac6919061138c565b602060405180830381865afa158015610ae1573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b059190611749565b60405180602001604052805f81525090935093509350505b93509350939050565b60605f82610b3390611804565b905063ed0764a160e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191603610bbf576040518060400160405280601981526020017f5065726d697373696f6e496e76616c69645f4578706972656400000000000000815250915050610d5d565b634c40eccb60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191603610c2c5760405180606001604052806021815260200161188f60219139915050610d5d565b638e143bf760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191603610c995760405180606001604052806024815260200161186b60249139915050610d5d565b63cbd3a96660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191603610d23576040518060400160405280601a81526020017f5065726d697373696f6e496e76616c69645f44697361626c6564000000000000815250915050610d5d565b6040518060400160405280600f81526020017f4c6f77204c6576656c204572726f7200000000000000000000000000000000008152509150505b919050565b5f604051905090565b5f80fd5b5f80fd5b5f819050919050565b610d8581610d73565b8114610d8f575f80fd5b50565b5f81359050610da081610d7c565b92915050565b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b610df082610daa565b810181811067ffffffffffffffff82111715610e0f57610e0e610dba565b5b80604052505050565b5f610e21610d62565b9050610e2d8282610de7565b919050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610e5f82610e36565b9050919050565b610e6f81610e55565b8114610e79575f80fd5b50565b5f81359050610e8a81610e66565b92915050565b5f67ffffffffffffffff82169050919050565b610eac81610e90565b8114610eb6575f80fd5b50565b5f81359050610ec781610ea3565b92915050565b5f819050919050565b610edf81610ecd565b8114610ee9575f80fd5b50565b5f81359050610efa81610ed6565b92915050565b5f80fd5b5f80fd5b5f67ffffffffffffffff821115610f2257610f21610dba565b5b610f2b82610daa565b9050602081019050919050565b828183375f83830152505050565b5f610f58610f5384610f08565b610e18565b905082815260208101848484011115610f7457610f73610f04565b5b610f7f848285610f38565b509392505050565b5f82601f830112610f9b57610f9a610f00565b5b8135610fab848260208601610f46565b91505092915050565b5f6101008284031215610fca57610fc9610da6565b5b610fd5610100610e18565b90505f610fe484828501610e7c565b5f830152506020610ff784828501610eb9565b602083015250604061100b84828501610e7c565b604083015250606061101f84828501610d92565b606083015250608061103384828501610e7c565b60808301525060a061104784828501610eec565b60a08301525060c082013567ffffffffffffffff81111561106b5761106a610e32565b5b61107784828501610f87565b60c08301525060e082013567ffffffffffffffff81111561109b5761109a610e32565b5b6110a784828501610f87565b60e08301525092915050565b5f805f606084860312156110ca576110c9610d6b565b5b5f6110d786828701610d92565b93505060206110e886828701610d92565b925050604084013567ffffffffffffffff81111561110957611108610d6f565b5b61111586828701610fb4565b9150509250925092565b5f8115159050919050565b6111338161111f565b82525050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f61116b82611139565b6111758185611143565b9350611185818560208601611153565b61118e81610daa565b840191505092915050565b6111a281610ecd565b82525050565b5f6060820190506111bb5f83018661112a565b81810360208301526111cd8185611161565b90506111dc6040830184611199565b949350505050565b5f80604083850312156111fa576111f9610d6b565b5b5f61120785828601610d92565b925050602061121885828601610eec565b9150509250929050565b5f6020820190506112355f830184611199565b92915050565b5f60208201905061124e5f83018461112a565b92915050565b5f806040838503121561126a57611269610d6b565b5b5f61127785828601610e7c565b925050602061128885828601610e7c565b9150509250929050565b5f819050919050565b5f6112b56112b06112ab84610e36565b611292565b610e36565b9050919050565b5f6112c68261129b565b9050919050565b5f6112d7826112bc565b9050919050565b6112e7816112cd565b82525050565b5f6020820190506113005f8301846112de565b92915050565b5f611310826112bc565b9050919050565b61132081611306565b82525050565b5f6020820190506113395f830184611317565b92915050565b5f806040838503121561135557611354610d6b565b5b5f61136285828601610eec565b925050602061137385828601610eec565b9150509250929050565b61138681610d73565b82525050565b5f60208201905061139f5f83018461137d565b92915050565b5f805f606084860312156113bc576113bb610d6b565b5b5f6113c986828701610d92565b93505060206113da86828701610d92565b92505060406113eb86828701610e7c565b9150509250925092565b5f6060820190506114085f83018661112a565b818103602083015261141a8185611161565b9050611429604083018461137d565b949350505050565b5f6020828403121561144657611445610d6b565b5b5f82013567ffffffffffffffff81111561146357611462610d6f565b5b61146f84828501610f87565b91505092915050565b5f6020820190508181035f8301526114908184611161565b905092915050565b6114a181610e55565b82525050565b6114b081610e90565b82525050565b6114bf81610d73565b82525050565b6114ce81610ecd565b82525050565b5f81519050919050565b5f82825260208201905092915050565b5f6114f8826114d4565b61150281856114de565b9350611512818560208601611153565b61151b81610daa565b840191505092915050565b5f61010083015f83015161153c5f860182611498565b50602083015161154f60208601826114a7565b5060408301516115626040860182611498565b50606083015161157560608601826114b6565b5060808301516115886080860182611498565b5060a083015161159b60a08601826114c5565b5060c083015184820360c08601526115b382826114ee565b91505060e083015184820360e08601526115cd82826114ee565b9150508091505092915050565b5f6040820190508181035f8301526115f28185611526565b9050611601602083018461137d565b9392505050565b6116118161111f565b811461161b575f80fd5b50565b5f8151905061162c81611608565b92915050565b5f6020828403121561164757611646610d6b565b5b5f6116548482850161161e565b91505092915050565b5f8160e01c9050919050565b5f60033d11156116855760045f803e6116825f5161165d565b90505b90565b5f60443d1061171457611699610d62565b60043d036004823e80513d602482011167ffffffffffffffff821117156116c1575050611714565b808201805167ffffffffffffffff8111156116df5750505050611714565b80602083010160043d0385018111156116fc575050505050611714565b61170b82602001850186610de7565b82955050505050505b90565b5f8060233d111561173157602060045f3e600191505f5190505b9091565b5f8151905061174381610d7c565b92915050565b5f6020828403121561175e5761175d610d6b565b5b5f61176b84828501611735565b91505092915050565b61177d81610e55565b82525050565b5f6040820190506117965f83018561137d565b6117a36020830184611774565b9392505050565b5f819050602082019050919050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b5f6117ef82516117b9565b80915050919050565b5f82821b905092915050565b5f61180e826114d4565b82611818846117aa565b9050611823816117e4565b925060048210156118635761185e7fffffffff00000000000000000000000000000000000000000000000000000000836004036008026117f8565b831692505b505091905056fe5065726d697373696f6e496e76616c69645f526563697069656e745369676e61747572655065726d697373696f6e496e76616c69645f4973737565725369676e6174757265a2646970667358221220ef5fa2c8bf98b4954f2082513a560ff7eb209ea0337091866085525bff789a8264736f6c63430008190033"
} satisfies MocksArtifact;