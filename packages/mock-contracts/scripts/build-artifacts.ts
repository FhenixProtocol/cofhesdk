import { execSync } from 'child_process';
import fs from 'fs';

const contracts = {
  MockTaskManager: '0xeA30c4B8b44078Bbf8a6ef5b9f1eC1626C7848D9',
  MockACL: '0x0000000000000000000000000000000000000400',
  MockZkVerifier: '0x0000000000000000000000000000000000000100',
  MockQueryDecrypter: '0x0000000000000000000000000000000000000200',
  TestBed: '0x0000000000000000000000000000000000000300',
};

function inspect(contract: string, field: string): any {
  const cmd = `forge inspect ${contract} ${field} --json`;
  const out = execSync(cmd, { encoding: 'utf8' }).trim();

  if (field === 'bytecode' || field === 'deployedBytecode') {
    // Both are emitted as quoted strings (JSON-encoded)
    return out.toLowerCase();
  }

  // ABI and metadata are full JSON
  return JSON.parse(out);
}

for (const [name, fixedAddress] of Object.entries(contracts)) {
  const abi = inspect(name, 'abi');
  const deployedBytecode = inspect(name, 'deployedBytecode');

  const artifact = {
    contractName: name,
    fixedAddress,
    abi,
    deployedBytecode,
  };

  fs.writeFileSync(
    `src/${name}.ts`,
    `// This file is auto-generated by build-artifacts.ts
import { type MocksArtifact } from './index';

export const ${name}Artifact = ${JSON.stringify(artifact, null, 2)} satisfies MocksArtifact;`
  );
}
